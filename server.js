// ==================== RUTA PRINCIPAL WHATSAPP ====================
app.post('/webhook', async (req, res) => {
  // --- MANEJO DE ERRORES GLOBAL ---
  try {
    const incomingMessage = req.body.Body.trim();
    const senderId = req.body.From;
    console.log(`Mensaje de ${senderId}: ${incomingMessage}`);

    let responseMessage = '';
    const messageLower = incomingMessage.toLowerCase();

    // --- DETECCI√ìN DE INTENCIONES NATURALES ---
    
    // Saludo inicial
    if (messageLower.includes('hola') || messageLower === 'hi' || messageLower === 'üëã') {
      responseMessage = `¬°Hola! üëã Soy tu asistente de *Hypnottica*. ¬øEn qu√© puedo ayudarte hoy? Puedes preguntarme por stock, precios o agendar una cita.`;

    // Buscar stock por c√≥digo (con o sin #)
    } else if (messageLower.startsWith('#stock ') || messageLower.startsWith('stock ') || /\b(stock|tenen|tienen|busco)\b.*\b([A-Za-z0-9\-]+)\b/.test(messageLower)) {
      // [C√≥digo de b√∫squeda por c√≥digo...]

    // B√öSQUEDA INTELIGENTE POR DESCRIPCI√ìN
    } else if (messageLower.includes('busco') || messageLower.includes('quiero') || messageLower.includes('tene') || 
               messageLower.includes('aviador') || messageLower.includes('wayfarer') || messageLower.includes('redondo') ||
               messageLower.includes('rectangular') || messageLower.includes('cuadrado') || messageLower.includes('angular') ||
               messageLower.includes('ray-ban') || messageLower.includes('oakley') || messageLower.includes('carter') ||
               messageLower.includes('vulk')) {
      // [C√≥digo de b√∫squeda inteligente...]

    // ==================== RESPUESTAS AUTOM√ÅTICAS NUEVAS ====================
    
    // MARCAS DISPONIBLES
    } else if (messageLower.includes('marca') || messageLower.includes('marcas') || messageLower.includes('que marca')) {
      const marcas = await obtenerMarcasUnicas();
      responseMessage = `üè∑Ô∏è  *Marcas que Trabajamos:*\n\n${marcas.join('\n')}\n\n_Escrib√≠ el nombre de una marca para ver modelos disponibles._`;

    // MEDIOS DE PAGO
    } else if (messageLower.includes('pago') || messageLower.includes('pag√≥') || messageLower.includes('pago') || 
               messageLower.includes('mercado pago') || messageLower.includes('transferencia') || 
               messageLower.includes('d√©bito') || messageLower.includes('debito') || 
               messageLower.includes('credito') || messageLower.includes('cr√©dito') || 
               messageLower.includes('efectivo') || messageLower.includes('descuento')) {
      responseMessage = `üí≥  *Medios de Pago Aceptados:*\n\n‚Ä¢ üíµ *Efectivo*: 10% de descuento\n‚Ä¢ üí≥ *Tarjetas*: D√©bito y Cr√©dito\n‚Ä¢ üì± *Transferencia*: Bancaria\n‚Ä¢ üîµ *Mercado Pago*\n\n_El descuento aplica s√≥lo en pago en efectivo._`;

    // OBRAS SOCIALES
    } else if (messageLower.includes('obra social') || messageLower.includes('obras sociales') || 
               messageLower.includes('swiss') || messageLower.includes('medicus') || 
               messageLower.includes('construir') || messageLower.includes('osetya') ||
               messageLower.includes('beneficio') || messageLower.includes('cobertura')) {
      responseMessage = `üè•  *Obras Sociales que Trabajamos:*\n\n‚Ä¢ Swiss Medical\n‚Ä¢ Medicus\n‚Ä¢ Construir Salud\n‚Ä¢ Osetya\n\nüìã  *Requisitos:*\n‚Ä¢ Receta m√©dica actualizada (v√°lida 60 d√≠as)\n‚Ä¢ Datos de la obra social y paciente\n‚Ä¢ Tipo de lente especificado en receta\n\n_Present√° tu receta en el local para gestionar tu beneficio._`;

    // GARANT√çAS
    } else if (messageLower.includes('garant√≠a') || messageLower.includes('garantia') || messageLower.includes('cambio')) {
      responseMessage = `üîß  *Garant√≠a:*\n\n‚Ä¢ Armazones: 6 meses por defectos de fabricaci√≥n\n‚Ä¢ Lentes y adaptaciones: Sin garant√≠a\n\n_Conserv√° tu ticket de compra para hacer v√°lida la garant√≠a._`;

    // Agendar o turno
    } else if (messageLower.includes('agendar') || messageLower.includes('turno') || messageLower.includes('hora') || messageLower.includes('cita')) {
      responseMessage = `‚è≥  *Sistema de Agendamiento en Construcci√≥n*\n\nPr√≥ximamente podr√°s agendar tu turno directamente por aqu√≠. Por ahora, te invitamos a llamarnos por tel√©fono para coordinar. ¬°Gracias!`;

    // Precios
    } else if (messageLower.includes('precio') || messageLower.includes('cuesta') || messageLower.includes('sale')) {
      responseMessage = "üíé  *Tenemos precios para todos los presupuestos*\n\nDesde armazones econ√≥micos hasta de primeras marcas. Contacta con un asesor para recibir una cotizaci√≥n personalizada sin compromiso.";

    // Direcci√≥n u horarios
    } else if (messageLower.includes('direcci√≥n') || messageLower.includes('donde') || messageLower.includes('ubic') || messageLower.includes('horario')) {
      responseMessage = "üìç  *Nuestra Direcci√≥n:*\n\n*HYPNOTTICA*\nSerrano 684, Villa Crespo. CABA.\n\nüïô  *Horarios:*\nLunes a S√°bados: 10:30 - 19:30";

    // Hablar con humano
    } else if (messageLower.includes('humano') || messageLower.includes('persona') || messageLower.includes('asesor') || messageLower.includes('telefono')) {
      responseMessage = "üîä  Te derivo con un asesor. Por favor, espera un momento...";

    } else {
      // --- CONSULTA A IA PARA PREGUNTAS ABIERTAS ---
      const marcasReales = await obtenerMarcasUnicas();
      const marcasTexto = marcasReales.join(', ');

      const promptIA = `Eres un asistente de la √≥ptica Hypnottica. 
      INFORMACI√ìN REAL ACTUALIZADA:
      - Marcas disponibles: ${marcasTexto}
      - Direcci√≥n: Serrano 684, Villa Crespo, CABA
      - Horarios: Lunes a S√°bados 10:30-19:30
      - Medios de pago: Efectivo (10% descuento), tarjetas, transferencia, Mercado Pago
      - Obras sociales: Swiss Medical, Medicus, Construir Salud, Osetya
      
      Cliente pregunta: "${incomingMessage}". 
      Responde SOLO con informaci√≥n verificada. Si no sab√©s algo, dec√≠ la verdad.`;

      responseMessage = await consultarIA(promptIA);
    }

    const twiml = new twilio.twiml.MessagingResponse();
    twiml.message(responseMessage);
    res.writeHead(200, { 'Content-Type': 'text/xml' });
    res.end(twiml.toString());
    
  } catch (error) {
    console.error('Error grave en el servidor:', error);
    const twiml = new twilio.twiml.MessagingResponse();
    twiml.message('‚ö†Ô∏è  Estoy teniendo problemas t√©cnicos moment√°neos. Por favor, intent√° de nuevo en un minuto.');
    res.writeHead(200, { 'Content-Type': 'text/xml' });
    res.end(twiml.toString());
  }
});
