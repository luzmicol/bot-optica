const express = require('express');
const app = express();

// ==================== CONFIGURACI√ìN B√ÅSICA ====================
app.use(express.urlencoded({ extended: true }));
app.use(express.json());

// ==================== DATOS COMPLETOS DE HYPNOTTICA ====================
const HYPNOTTICA = {
  // üìç INFORMACI√ìN DE LA √ìPTICA
  informacion: {
    nombre: "Hypnottica",
    direccion: "Serrano 684, Villa Crespo, CABA",
    horarios: "Lunes a S√°bado de 10:30 a 19:30",
    telefono: "1132774631",
    redes: "@hypnottica en Instagram y Facebook",
    email: "solo proveedores"
  },

  // üè• OBRAS SOCIALES
  obrasSociales: {
    aceptadas: ["Medicus", "Osetya", "Construir Salud", "Swiss Medical"],
    requisitos: {
      receta: "Debe detallar de manera precisa el tipo de lente solicitado",
      documentacion: "N√∫mero de credencial, datos del paciente, sello del m√©dico y receta vigente",
      vigencia: "60 d√≠as corridos desde su emisi√≥n",
      restricciones: "La cobertura es √∫nicamente para lo indicado en la receta"
    },
    promociones: "Actualmente no contamos con promociones adicionales"
  },

  // üëì PRODUCTOS
  productos: {
    armazones: "Disponibles en stock (consultar modelos)",
    lentesContacto: {
      marcas: ["Acuvue", "Biofinity", "Air Optix"],
      tipos: ["diarios", "mensuales", "anuales"],
      nota: "Los anuales casi no se utilizan actualmente por mayor riesgo y cuidado"
    },
    liquidos: "Marcas y tama√±os disponibles (consultar)",
    accesorios: "Estuches, pa√±os, l√≠quidos y otros accesorios",
    servicios: "Ajustes y reparaciones (evaluaci√≥n en persona)"
  },

  // üí∞ PRECIOS Y PROMOCIONES
  precios: {
    rangoArmazones: "$55.000 hasta $370.000 (solo armaz√≥n)",
    promociones: [
      "3 cuotas sin inter√©s a partir de $100.000",
      "6 cuotas sin inter√©s a partir de $200.000",
      "10% de descuento abonando en efectivo (totalidad en efectivo)"
    ],
    mediosPago: ["efectivo", "QR", "tarjetas de cr√©dito/d√©bito"]
  },

  // üó£Ô∏è PALABRAS CLAVE
  palabrasClave: {
    saludos: [
      "hola", "buenas", "holis", "hey", "qu√© tal", "c√≥mo and√°s", "c√≥mo andan",
      "buen d√≠a", "buenas tardes", "buenas noches", "qu√© hac√©s", "c√≥mo va",
      "saludos", "ey", "buenas ¬øtodo bien?", "holaaa"
    ],
    despedidas: [
      "chau", "gracias", "nos vemos", "adi√≥s", "hasta luego", "hasta pronto",
      "hasta ma√±ana", "hasta la pr√≥xima", "cuidate", "cu√≠dense", "un saludo",
      "suerte", "que est√©s bien", "que les vaya bien", "abrazo", "besos",
      "hablamos", "chaooo"
    ],
    sinonimosProductos: [
      "lentes", "anteojos", "gafas", "espejuelos", "gafas de sol", "lentes de sol",
      "lentes recetados", "anteojos recetados", "lentes de aumento", "lentes graduados",
      "monturas", "armazones", "cristales", "lentillas", "lentes de contacto",
      "pupilentes", "gafas √≥pticas", "gafas de lectura", "multifocales", "bifocales",
      "progresivos", "lentes para computadora", "lentes de cerca", "lentes de lejos"
    ]
  },

  // ‚è∞ TIEMPOS DE ENTREGA
  tiemposEntrega: {
    particulares: "1 d√≠a a 1 semana (seg√∫n tipo de cristal)",
    obraSocial: "alrededor de 2 semanas",
    lentesContactoOS: "2 a 4 semanas"
  }
};

// ==================== SISTEMA DE INTENCIONES MEJORADO ====================
class IntentRecognizer {
 detectIntent(mensaje) {
  const mensajeLower = mensaje.toLowerCase().trim();
  
  // üéØ ORDEN CR√çTICO: Lo m√°s espec√≠fico primero
  if (this.esLentesContacto(mensajeLower)) return 'lentes_contacto';
  if (this.esLiquidos(mensajeLower)) return 'liquidos';
  if (this.esObraSocial(mensajeLower)) return 'obra_social';
  if (this.esPrecio(mensajeLower)) return 'precio';
  if (this.esMarca(mensajeLower)) return 'marca';
  if (this.esHorario(mensajeLower)) return 'horario';
  if (this.esDireccion(mensajeLower)) return 'direccion';
  if (this.esStock(mensajeLower)) return 'stock';
  if (this.esSaludo(mensajeLower)) return 'saludo';
  if (this.esDespedida(mensajeLower)) return 'despedida';
  if (this.esConsultaFrecuente(mensajeLower)) return 'consulta_frecuente';
  
  return 'no_entendido';
}
  esSaludo(mensaje) {
    const patronesSaludo = [
      'hola', 'buenas', 'holis', 'hey', 'qu√© tal', 'c√≥mo and√°s', 'c√≥mo andan',
      'buen d√≠a', 'buenas tardes', 'buenas noches', 'qu√© hac√©s', 'c√≥mo va',
      'saludos', 'ey', 'buenas', 'todo bien', 'holaaa', 'hi', 'hello',
      'buenass', 'que tal', 'como estas', 'c√≥mo est√°s', 'que onda'
    ];
    return patronesSaludo.some(saludo => mensaje.includes(saludo));
  }

  esDespedida(mensaje) {
    const patronesDespedida = [
      'chau', 'gracias', 'nos vemos', 'adi√≥s', 'hasta luego', 'hasta pronto',
      'hasta ma√±ana', 'hasta la pr√≥xima', 'cuidate', 'cu√≠dense', 'un saludo',
      'suerte', 'que est√©s bien', 'que les vaya bien', 'abrazo', 'besos',
      'hablamos', 'chaooo', 'bye', 'goodbye', 'adios', 'chao', 'asta luego'
    ];
    return patronesDespedida.some(despedida => mensaje.includes(despedida));
  }

  esObraSocial(mensaje) {
  // Evitar que detecte "l√≠quidos" como "obra social"
  if (mensaje.includes('l√≠quidos') || mensaje.includes('liquidos')) {
    return false;
  }
  
  const patronesOS = [
    'obra social', 'prepaga', 'swiss medical', 'medicus', 'osetya', 
    'construir salud', 'obras sociales', 'cobertura', 'plan m√©dico',
    'trabajan con', 'aceptan', 'tienen convenio', 'seguro', 'medical'
  ];
  return patronesOS.some(palabra => mensaje.includes(palabra));
}
  esStock(mensaje) {
    const patronesStock = [
      'stock', 'tenes', 'tienen', 'disponible', 'hay', 'queda', 'venden',
      'conseguir', 'proveen', 'ofrecen', 'trabajan con', 'venden',
      'qu√© tienen', 'que tienen', 'que tenes', 'qu√© tenes'
    ];
    return patronesStock.some(palabra => mensaje.includes(palabra));
  }

  esPrecio(mensaje) {
    const patronesPrecio = [
      'precio', 'cuesta', 'cuanto sale', 'valor', 'cu√°nto', 'precios',
      'cuestan', 'sale', 'valen', 'cotizaci√≥n', 'presupuesto', 'tarifa',
      'caro', 'barato', 'econ√≥mico', 'cost√≥', 'pagu√©', 'pagar', 'dinero',
      '$', 'pesos'
    ];
    return patronesPrecio.some(palabra => mensaje.includes(palabra));
  }

  esMarca(mensaje) {
    const patronesMarca = [
      'marca', 'ray-ban', 'oakley', 'marcas', 'vulk', 'acuvue', 'biofinity',
      'air optix', 'modelo', 'fabricante', 'empresa', 'brand', 'modelos',
      'qu√© marca', 'que marca', 'ray ban', 'air optix'
    ];
    return patronesMarca.some(palabra => mensaje.includes(palabra));
  }

  esHorario(mensaje) {
    const patronesHorario = [
      'horario', 'hora', 'abren', 'cierran', 'atenci√≥n', 'atencion',
      'cuando abren', 'cu√°ndo abren', 'cuando cierran', 'cu√°ndo cierran',
      'abierto', 'cerrado', 'funcionan', 'laboral', 'd√≠as', 'dias',
      'lunes', 'martes', 'mi√©rcoles', 'miercoles', 'jueves', 'viernes',
      's√°bado', 'sabado', 'domingo', 'fin de semana'
    ];
    return patronesHorario.some(palabra => mensaje.includes(palabra));
  }

  esDireccion(mensaje) {
    const patronesDireccion = [
      'direccion', 'ubicacion', 'donde estan', 'ubicados', 'direcci√≥n',
      'ubicaci√≥n', 'd√≥nde', 'donde', 'local', 'negocio', 'tienda',
      'comercio', 'lugar', 'sitio', 'address', 'location', 'mapa',
      'como llegar', 'c√≥mo llegar', 'zona', 'barrio', 'villa crespo',
      'serrano'
    ];
    return patronesDireccion.some(palabra => mensaje.includes(palabra));
  }

  esLentesContacto(mensaje) {
  const patronesLC = [
    'lentes de contacto', 'lentillas', 'pupilentes', 'contacto',
    'lentes contacto', 'lentilla', 'contact lens', 'lentescontacto',
    'lentillas de contacto', 'pupilente', 'lentescontactos',
    'lentes de contactos', 'lentillas contacto', 'lentescontact',
    'qu√© lentes de contacto', 'que lentes de contacto', 'lentes contacto tienen',
    'lentillas tienen', 'contactos tienen', 'tienen lentes de contacto',
    'tienen lentillas', 'venden lentes de contacto', 'venden contactos'
  ];
  return patronesLC.some(palabra => mensaje.includes(palabra));
}
  esLiquidos(mensaje) {
    const patronesLiquidos = [
      'l√≠quido', 'liquido', 'solucion', 'soluci√≥n', 'liquidos', 'l√≠quidos',
      'soluciones', 'producto limpieza', 'limpieza lentes', 'limpiar',
      'limpiador', 'humectante', 'gotas', 'eye drops', 'solution',
      'qu√© l√≠quido', 'que liquido', 'l√≠quidos tienen', 'liquidos tienen',
      'solucion tienen', 'soluci√≥n tienen', 'recomendaci√≥n l√≠quido',
      'recomendacion liquido'
    ];
    return patronesLiquidos.some(palabra => mensaje.includes(palabra));
  }

  esConsultaFrecuente(mensaje) {
    const patronesConsulta = [
      'envio', 'env√≠o', 'domicilio', 'financiacion', 'cuota', 'receta',
      'entrega', 'tiempo', 'demora', 'cu√°ndo', 'cuando', 'forma de pago',
      'medio de pago', 'tarjeta', 'efectivo', 'transferencia', 'qr',
      'descuento', 'promo', 'promoci√≥n', 'oferta', 'rebaja', 'bonificaci√≥n',
      'primera vez', 'nuevo', 'empezar', 'iniciar', 'comenzar'
    ];
    return patronesConsulta.some(consulta => mensaje.includes(consulta));
  }
}

// ==================== MANEJADOR DE RESPUESTAS MEJORADO ====================
class ResponseHandler {
  constructor() {
    this.recognizer = new IntentRecognizer();
  }

  async generarRespuesta(mensaje, contexto = { paso: 0, ultimoTema: null }) {
    const intent = this.recognizer.detectIntent(mensaje);
    const mensajeLower = mensaje.toLowerCase();
    
    // üéØ RESPUESTAS M√ÅS CORTAS Y NATURALES
    switch (intent) {
      case 'saludo':
        contexto.ultimoTema = 'saludo';
        return this.respuestaSaludo(contexto);
      
      case 'obra_social':
        contexto.ultimoTema = 'obra_social';
        return this.respuestaObraSocial(mensajeLower, contexto);
      
      case 'precio':
        contexto.ultimoTema = 'precio';
        return this.respuestaPrecios(mensajeLower, contexto);
      
      case 'marca':
        contexto.ultimoTema = 'marca';
        return this.respuestaMarcas(mensajeLower, contexto);
      
      case 'horario':
        contexto.ultimoTema = 'horario';
        return "‚è∞ Abrimos de lunes a s√°bado de 10:30 a 19:30. ¬øTe sirve alg√∫n d√≠a en particular?";
      
      case 'direccion':
        contexto.ultimoTema = 'direccion';
        return "üìç Estamos en Serrano 684, Villa Crespo. ¬øNecesit√°s indicaciones o el barrio?";
      
      case 'lentes_contacto':
        contexto.ultimoTema = 'lentes_contacto';
        return this.respuestaLentesContacto(mensajeLower, contexto);
      
      case 'liquidos':
        contexto.ultimoTema = 'liquidos';
        return "üß¥ Tenemos l√≠quidos de varias marcas. ¬øUs√°s alguna marca espec√≠fica o te recomiendo?";
      
      case 'consulta_frecuente':
        return this.respuestaConsultaFrecuente(mensajeLower, contexto);
      
      case 'despedida':
        return "üëã ¬°Chau! Cualquier cosa escribime üòä";
      
      default:
        // Si no entendi√≥ pero estamos en medio de una conversaci√≥n
        if (contexto.ultimoTema) {
          return this.continuarConversacion(contexto.ultimoTema, mensajeLower, contexto);
        }
        return this.respuestaNoEntendido();
    }
  }

  respuestaSaludo(contexto) {
    contexto.paso = 1;
    return "üëã ¬°Hola! Soy Luna de Hypnottica. ¬øEn qu√© te ayudo hoy?";
  }

  respuestaObraSocial(mensaje, contexto) {
    if (mensaje.includes('medicus') || mensaje.includes('swiss') || mensaje.includes('osetya') || mensaje.includes('construir')) {
      return "‚úÖ S√≠, trabajamos con esa obra social. ¬øTen√©s la receta? La vigencia es de 60 d√≠as.";
    }
    
    if (mensaje.includes('requisito') || mensaje.includes('documento')) {
      return "üìã Necesit√°s receta con el tipo de lente espec√≠fico, credencial y que est√© vigente (60 d√≠as).";
    }
    
    return "üè• Trabajamos con Medicus, Swiss Medical, Osetya y Construir Salud. ¬øCu√°l ten√©s?";
  }

  respuestaPrecios(mensaje, contexto) {
    if (mensaje.includes('armazon') || mensaje.includes('lente') || mensaje.includes('anteojo')) {
      return "üëì Los armazones arrancan en $55.000. ¬øBusc√°s algo en particular?";
    }
    
    if (mensaje.includes('contacto') || mensaje.includes('lentilla')) {
      return "üëÅÔ∏è Los lentes de contacto var√≠an seg√∫n la marca y tipo. ¬øUs√°s alguno actualmente?";
    }
    
    if (mensaje.includes('promo') || mensaje.includes('cuota') || mensaje.includes('descuento')) {
      return "üí≥ Tenemos cuotas sin inter√©s y 10% en efectivo. ¬øQu√© te interesa?";
    }
    
    return "üí≤ Los precios dependen del producto. ¬øArmazones, lentes de contacto o accesorios?";
  }

  respuestaMarcas(mensaje, contexto) {
    if (mensaje.includes('ray-ban') || mensaje.includes('oakley') || mensaje.includes('vulk')) {
      return `‚úÖ S√≠, trabajamos con ${mensaje.includes('ray-ban') ? 'Ray-Ban' : mensaje.includes('oakley') ? 'Oakley' : 'Vulk'}. Tenemos varios modelos.`;
    }
    
    if (mensaje.includes('contacto') || mensaje.includes('acuvue') || mensaje.includes('biofinity')) {
      return "üëÅÔ∏è De lentes de contacto tenemos Acuvue, Biofinity y Air Optix. ¬øAlguna te interesa?";
    }
    
    return "üëì Trabajamos con Ray-Ban, Oakley, Vulk y m√°s. ¬øTe gusta alguna marca en especial?";
  }

  respuestaLentesContacto(mensaje, contexto) {
    if (mensaje.includes('marca') || mensaje.includes('acuvue') || mensaje.includes('biofinity')) {
      return "üëÅÔ∏è Tenemos Acuvue, Biofinity y Air Optix. ¬øProbaste alguna?";
    }
    
    if (mensaje.includes('tipo') || mensaje.includes('diario') || mensaje.includes('mensual')) {
      return "üìÖ Los hay diarios, mensuales y anuales. Los diarios son los m√°s pr√°cticos para empezar.";
    }
    
    if (mensaje.includes('primera vez') || mensaje.includes('empezar') || mensaje.includes('nuevo')) {
      return "üéØ Para primera vez te recomiendo una consulta para ver qu√© te conviene m√°s. ¬øYa ten√©s receta?";
    }
    
    return "üëÅÔ∏è ¬°S√≠! Trabajamos con lentes de contacto. ¬øEs tu primera vez o ya us√°s?";
  }

  respuestaConsultaFrecuente(mensaje, contexto) {
    if (mensaje.includes('envio') || mensaje.includes('domicilio')) {
      return "üöö Hacemos env√≠os, pero recomendamos retirar ac√° para prob√°rtelos bien.";
    }
    
    if (mensaje.includes('tiempo') || mensaje.includes('entrega') || mensaje.includes('demora')) {
      if (mensaje.includes('obra social')) {
        return "‚è≥ Por obra social son 2 semanas aproximadamente.";
      }
      return "‚è±Ô∏è Los particulares los tenemos en 1-7 d√≠as seg√∫n el cristal.";
    }
    
    if (mensaje.includes('receta')) {
      return "üìÑ S√≠, aceptamos recetas. La vigencia es de 60 d√≠as.";
    }
    
    return this.respuestaNoEntendido();
  }
respuestaLiquidos(mensaje, contexto) {
  if (mensaje.includes('marca') || mensaje.includes('acuvue') || mensaje.includes('biofinity')) {
    return "üëÅÔ∏è Tenemos Acuvue, Biofinity y Air Optix. ¬øProbaste alguna?";
  }
  
  // üéØ NUEVO: Detectar recomendaciones
  if (mensaje.includes('recomenda') || mensaje.includes('suger√≠') || mensaje.includes('sugiere')) {
    return "üß¥ Te recomiendo Renu o Opti-Free, son los m√°s populares. ¬øPara qu√© tipo de lente?";
  }
  
  if (mensaje.includes('tama√±o') || mensaje.includes('ml') || mensaje.includes('grande')) {
    return "üìè Tenemos de 300ml y 360ml. El de 360ml rinde m√°s si us√°s lentes a diario.";
  }
  
  // Si ya estaban hablando de l√≠quidos y preguntan qu√© tienen
  if (contexto.ultimoTema === 'liquidos' && (mensaje.includes('que') || mensaje.includes('qu√©'))) {
    return "üß¥ Tenemos Renu, Opti-Free, BioTrue y m√°s marcas. ¬øAlguna te interesa?";
  }
  
  return "üß¥ Tenemos l√≠quidos de varias marcas. ¬øUs√°s alguna marca espec√≠fica o te recomiendo?";
}
  continuarConversacion(ultimoTema, mensaje, contexto) {
  const mensajeLower = mensaje.toLowerCase().trim();
  
  // ==================== RESPUESTAS SIMPLES UNIVERSALES ====================
  if (this.esRespuestaSimpleSi(mensajeLower)) {
    switch (ultimoTema) {
      case 'lentes_contacto':
        return "¬°Bien! ¬øQu√© marca us√°s actualmente?";
      case 'obra_social':
        return "Perfecto üòä ¬øTen√©s la receta? La vigencia es de 60 d√≠as.";
      case 'liquidos':
        return "¬øQu√© marca de l√≠quido us√°s?";
      case 'marca':
        return "¬øTe interesa alg√∫n modelo en particular?";
      case 'precio':
        return "¬øDe qu√© producto quer√©s saber el precio exacto?";
      default:
        return "¬øEn qu√© m√°s te puedo ayudar?";
    }
  }
  
  if (this.esRespuestaSimpleNo(mensajeLower)) {
    switch (ultimoTema) {
      case 'lentes_contacto':
        return "¬°Genial! Te recomiendo empezar con una consulta. ¬øTen√©s receta oftalmol√≥gica?";
      case 'obra_social':
        return "¬øTe interesa saber sobre precios particulares?";
      case 'liquidos':
        return "¬øQuer√©s que te recomiende alguna marca?";
      case 'marca':
        return "¬øTe ayudo a encontrar alguna marca que te guste?";
      default:
        return "¬øTe ayudo con algo m√°s?";
    }
  }

  // ==================== RESPUESTAS ESPEC√çFICAS POR TEMA ====================
  switch (ultimoTema) {
    case 'lentes_contacto':
      return this.manejarRespuestaLentesContacto(mensajeLower, contexto);
    
    case 'liquidos':
      return this.manejarRespuestaLiquidos(mensajeLower, contexto);
    
    case 'obra_social':
      return this.manejarRespuestaObraSocial(mensajeLower, contexto);
    
    case 'marca':
      return this.manejarRespuestaMarca(mensajeLower, contexto);
    
    case 'precio':
      return this.manejarRespuestaPrecio(mensajeLower, contexto);
    
    case 'horario':
      return this.manejarRespuestaHorario(mensajeLower, contexto);
    
    case 'direccion':
      return this.manejarRespuestaDireccion(mensajeLower, contexto);
    
    default:
      return "¬øNecesit√°s que te ayude con algo m√°s?";
  }
}

// ==================== MANEJADORES ESPEC√çFICOS COMPLETOS ====================

manejarRespuestaLentesContacto(mensaje, contexto) {
  // PRIMERA VEZ / EXPERIENCIA
  if (this.contieneAlguna(mensaje, ['primera vez', 'nunca use', 'nunca us√©', 'empezar', 'iniciar', 'comenzar', 'nuevo'])) {
    return "üéØ Perfecto para primera vez! Te recomiendo una consulta. ¬øTen√©s receta oftalmol√≥gica actual?";
  }
  
  if (this.contieneAlguna(mensaje, ['ya uso', 'uso actual', 'actualmente', 'habitual', 'experiencia', 'experimentado'])) {
    return "¬°Bien! ¬øQu√© marca us√°s actualmente?";
  }

  // MARCAS DE LENTES DE CONTACTO
  if (this.contieneAlguna(mensaje, ['acuvue', 'acuvue'])) {
    return "‚úÖ Tenemos Acuvue. ¬øBusc√°s los diarios, quincenales o mensuales?";
  }
  if (this.contieneAlguna(mensaje, ['biofinity', 'biofinity'])) {
    return "‚úÖ Tenemos Biofinity. Son mensuales, muy c√≥modos. ¬øTe interesan?";
  }
  if (this.contieneAlguna(mensaje, ['air optix', 'air optix'])) {
    return "‚úÖ Tenemos Air Optix. ¬øPara miop√≠a, astigmatismo o presbicia?";
  }

  // TIPOS DE LENTES
  if (this.contieneAlguna(mensaje, ['diario', 'diarios', 'desechable', 'desechables'])) {
    return "üìÖ Los diarios son los m√°s pr√°cticos. No necesitan mantenimiento. ¬øPara qu√© uso los quer√©s?";
  }
  if (this.contieneAlguna(mensaje, ['mensual', 'mensuales', 'mensuales'])) {
    return "üìÖ Los mensuales son m√°s econ√≥micos a largo plazo. ¬øYa usaste este tipo?";
  }
  if (this.contieneAlguna(mensaje, ['anual', 'anuales'])) {
    return "üìÖ Los anuales casi no se usan hoy. Te recomiendo mensuales que son m√°s seguros. ¬øTe sirve?";
  }

  // PROBLEMAS ESPEC√çFICOS
  if (this.contieneAlguna(mensaje, ['miopia', 'miop√≠a', 'corto vista'])) {
    return "üëÅÔ∏è Para miop√≠a tenemos varias opciones. ¬øTen√©s el valor de la receta?";
  }
  if (this.contieneAlguna(mensaje, ['astigmatismo', 'astigmatismo'])) {
    return "üëÅÔ∏è Para astigmatismo tambi√©n hay lentes especiales. ¬øSab√©s tu medida?";
  }
  if (this.contieneAlguna(mensaje, ['ojo seco', 'sequedad', 'secos'])) {
    return "üíß Para ojos secos recomiendo los diarios o marcas espec√≠ficas. ¬øSufr√≠s de sequedad?";
  }

  // CONSULTA M√âDICA
  if (this.contieneAlguna(mensaje, ['receta', 'oftalm√≥logo', 'oftalmologo', 'm√©dico', 'medico'])) {
    return "üìÑ Si ten√©s receta, traela. La vigencia es de 6 meses para lentes de contacto. ¬øLa ten√©s?";
  }

  // PRECIOS
  if (this.contieneAlguna(mensaje, ['precio', 'cuesta', 'valor', 'cuanto'])) {
    return "üí≤ Los precios var√≠an seg√∫n marca y tipo. ¬øTe interesa alguna en particular?";
  }

  return "¬øTe interesa probar alguna marca o necesit√°s m√°s informaci√≥n?";
}

manejarRespuestaLiquidos(mensaje, contexto) {
  // RECOMENDACIONES
  if (this.contieneAlguna(mensaje, ['recomenda', 'suger√≠', 'sugiere', 'recomiendas', 'recomendaci√≥n'])) {
    return "üß¥ Te recomiendo Renu para sensibilidad o Opti-Free para uso diario. ¬øQu√© tipo de lente us√°s?";
  }

  // MARCAS ESPEC√çFICAS
  if (this.contieneAlguna(mensaje, ['renu', 'renu'])) {
    return "‚úÖ Tenemos Renu. ¬øEl de 300ml o 360ml?";
  }
  if (this.contieneAlguna(mensaje, ['opti-free', 'optifree'])) {
    return "‚úÖ Tenemos Opti-Free. ¬øExpress o Puremoist?";
  }
  if (this.contieneAlguna(mensaje, ['biotrue', 'bio true'])) {
    return "‚úÖ Tenemos BioTrue. Es muy suave con los ojos sensibles. ¬øTe interesa?";
  }

  // TAMA√ëOS
  if (this.contieneAlguna(mensaje, ['chico', 'peque√±o', '60ml', '120ml'])) {
    return "üìè Para probar o viajar, tenemos de 60ml y 120ml. ¬øPara qu√© lo necesit√°s?";
  }
  if (this.contieneAlguna(mensaje, ['grande', '360ml', '300ml', 'economico', 'econ√≥mico'])) {
    return "üìè El de 360ml rinde m√°s y es m√°s econ√≥mico. ¬øUs√°s lentes a diario?";
  }

  // TIPOS DE LENTE
  if (this.contieneAlguna(mensaje, ['diario', 'diarios'])) {
    return "üìÖ Para diarios pod√©s usar cualquier l√≠quido, pero Renu va muy bien. ¬øTe sirve?";
  }
  if (this.contieneAlguna(mensaje, ['mensual', 'mensuales'])) {
    return "üìÖ Para mensuales recomiendo Opti-Free que limpia m√°s en profundidad. ¬øUs√°s mensuales?";
  }

  // PROBLEMAS ESPEC√çFICOS
  if (this.contieneAlguna(mensaje, ['sensibl', 'sensibilidad', 'alergia'])) {
    return "üåø Para sensibilidad, BioTrue o Renu Sensitive. ¬øTen√©s los ojos sensibles?";
  }
  if (this.contieneAlguna(mensaje, ['sequedad', 'seco', 'hidrataci√≥n'])) {
    return "üíß Para sequedad, Opti-Free Puremoist tiene extra hidrataci√≥n. ¬øTe sirve?";
  }

  return "¬øQu√© marca de l√≠quido te interesa o quer√©s una recomendaci√≥n?";
}

manejarRespuestaObraSocial(mensaje, contexto) {
  // OBRAS SOCIALES ESPEC√çFICAS
  if (this.contieneAlguna(mensaje, ['medicus', 'medicus'])) {
    return "‚úÖ S√≠, trabajamos con Medicus. ¬øTen√©s la receta? La vigencia es de 60 d√≠as.";
  }
  if (this.contieneAlguna(mensaje, ['swiss', 'swiss medical'])) {
    return "‚úÖ S√≠, trabajamos con Swiss Medical. ¬øTra√©s receta y credencial?";
  }
  if (this.contieneAlguna(mensaje, ['osetya', 'osetya'])) {
    return "‚úÖ S√≠, trabajamos con Osetya. ¬øLa receta tiene menos de 60 d√≠as?";
  }
  if (this.contieneAlguna(mensaje, ['construir', 'construir salud'])) {
    return "‚úÖ S√≠, trabajamos con Construir Salud. ¬øTen√©s toda la documentaci√≥n?";
  }

  // DOCUMENTACI√ìN
  if (this.contieneAlguna(mensaje, ['receta', 'documento', 'documentaci√≥n', 'papeles'])) {
    return "üìã Necesit√°s receta espec√≠fica, credencial y DNI. ¬øTodo al d√≠a?";
  }

  // VIGENCIA
  if (this.contieneAlguna(mensaje, ['vigencia', '60 d√≠as', '60 dias', 'caduca', 'venc'])) {
    return "‚è∞ La receta vale 60 d√≠as desde la emisi√≥n. ¬øLa tuya est√° en fecha?";
  }

  // TURNOS Y PROCESOS
  if (this.contieneAlguna(mensaje, ['turno', 'cita', 'consulta', 'visita'])) {
    return "üìÖ Pod√©s venir directamente. Tra√© receta, credencial y DNI. ¬øQu√© d√≠a te viene bien?";
  }

  return "¬øTen√©s alguna obra social en particular o te cuento los requisitos?";
}

manejarRespuestaMarca(mensaje, contexto) {
  // MARCAS DE ARMAZONES
  if (this.contieneAlguna(mensaje, ['ray-ban', 'rayban', 'ray ban'])) {
    return "üòé Ray-Ban tenemos varios modelos. ¬øAviator, Wayfarer o Clubmaster?";
  }
  if (this.contieneAlguna(mensaje, ['oakley', 'oakley'])) {
    return "üö¥ Oakley ideal para deporte. ¬øHolbrook, Frogskins o algo m√°s deportivo?";
  }
  if (this.contieneAlguna(mensaje, ['vulk', 'vulk'])) {
    return "üëì Vulk tenemos opciones econ√≥micas y lindas. ¬øPara hombre o mujer?";
  }

  // ESTILOS
  if (this.contieneAlguna(mensaje, ['aviator', 'aviador'])) {
    return "‚úàÔ∏è Aviator cl√°sico de metal. ¬øOro, plata o negro?";
  }
  if (this.contieneAlguna(mensaje, ['wayfarer', 'cuadrado'])) {
    return "üï∂Ô∏è Wayfarer estilo cl√°sico. ¬øNegro, tortoise o color?";
  }
  if (this.contieneAlguna(mensaje, ['redondo', 'circular', 'john lennon'])) {
    return "‚óè Redondos muy de moda. ¬øMetal o acetato?";
  }

  return "¬øTe gusta alg√∫n estilo en particular o te ayudo a elegir?";
}

manejarRespuestaPrecio(mensaje, contexto) {
  // PRODUCTOS ESPEC√çFICOS
  if (this.contieneAlguna(mensaje, ['armazon', 'armaz√≥n', 'marco', 'montura'])) {
    return "üëì Armazones desde $55.000. ¬øBusc√°s alguna marca en particular?";
  }
  if (this.contieneAlguna(mensaje, ['lente contacto', 'lentilla', 'contacto'])) {
    return "üëÅÔ∏è Lentes de contacto desde $5.000 el par. ¬øDiarios o mensuales?";
  }
  if (this.contieneAlguna(mensaje, ['liquido', 'soluci√≥n'])) {
    return "üß¥ L√≠quidos desde $3.000. ¬øQu√© marca te interesa?";
  }

  // PROMOCIONES
  if (this.contieneAlguna(mensaje, ['promo', 'promoci√≥n', 'oferta', 'descuento'])) {
    return "üéâ 3 cuotas sin inter√©s desde $100.000 y 10% en efectivo. ¬øTe sirve?";
  }

  return "¬øDe qu√© producto quer√©s saber el precio exacto?";
}

manejarRespuestaHorario(mensaje, contexto) {
  if (this.contieneAlguna(mensaje, ['lunes', 'martes', 'miercoles', 'jueves', 'viernes', 'sabado'])) {
    return "‚úÖ Abrimos todos los d√≠as de 10:30 a 19:30. ¬øQu√© d√≠a pens√°s venir?";
  }
  if (this.contieneAlguna(mensaje, ['finde', 'fin de semana', 's√°bado', 'sabado'])) {
    return "‚úÖ Los s√°bados tambi√©n de 10:30 a 19:30. ¬øTe viene bien el s√°bado?";
  }
  return "‚è∞ Abrimos de lunes a s√°bado de 10:30 a 19:30. ¬øTe sirve alg√∫n d√≠a?";
}

manejarRespuestaDireccion(mensaje, contexto) {
  if (this.contieneAlguna(mensaje, ['subte', 'colectivo', 'bondi', 'transporte'])) {
    return "üöá Estamos a 4 cuadras de √Ångel Gallardo (subte B). Colectivos: 109, 110, 112.";
  }
  if (this.contieneAlguna(mensaje, ['estacionamiento', 'auto', 'coche', 'aparcar'])) {
    return "üöó Hay estacionamiento en la zona. A veces se consigue en la misma calle.";
  }
  return "üìç Serrano 684, Villa Crespo. ¬øNecesit√°s indicaciones de c√≥mo llegar?";
}

// ==================== UTILIDADES ====================

esRespuestaSimpleSi(mensaje) {
  return this.contieneAlguna(mensaje, ['si', 's√≠', 'si.', 's√≠.', 'claro', 'por supuesto', 'obvio', 'dale']);
}

esRespuestaSimpleNo(mensaje) {
  return this.contieneAlguna(mensaje, ['no', 'no.', 'todav√≠a no', 'a√∫n no', 'aun no', 'nop']);
}

contieneAlguna(mensaje, palabras) {
  return palabras.some(palabra => mensaje.includes(palabra));
}

  respuestaNoEntendido() {
    return "ü§î No te entend√≠ bien. ¬øPod√©s decirlo de otra forma?";
  }
}
// ==================== SERVICIOS EXTERNOS ====================
// (Por ahora vac√≠os - los agregaremos despu√©s con Google Sheets)
class MemoryService {
  constructor() {
    this.contextos = new Map();
  }

  obtenerContextoUsuario(userId) {
    if (!this.contextos.has(userId)) {
      this.contextos.set(userId, { paso: 0, historial: [] });
    }
    return this.contextos.get(userId);
  }

  guardarContextoUsuario(userId, contexto) {
    this.contextos.set(userId, contexto);
  }
}

// ==================== CONFIGURACI√ìN EXPRESS ====================
const memoryService = new MemoryService();
const responseHandler = new ResponseHandler();

// ==================== RUTAS PRINCIPALES ====================

// Health check
app.get('/health', (req, res) => {
  res.json({ 
    status: 'OK', 
    name: 'Luna - Hypnottica',
    service: 'Asistente Virtual √ìptica',
    version: '1.0'
  });
});

// P√°gina principal
app.get('/', (req, res) => {
  res.send(`
    <html>
      <head>
        <title>Hypnottica - Asistente Virtual</title>
        <style>
          body { 
            font-family: 'Arial', sans-serif; 
            margin: 40px; 
            text-align: center; 
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            color: white;
          }
          .container { 
            max-width: 600px; 
            margin: 0 auto; 
            background: white;
            color: #333;
            padding: 30px;
            border-radius: 20px;
            box-shadow: 0 20px 40px rgba(0,0,0,0.1);
          }
          .status { 
            background: #d4edda; 
            padding: 20px; 
            border-radius: 10px; 
            margin: 20px 0; 
            color: #155724;
          }
          .btn {
            display: inline-block;
            padding: 12px 24px;
            background: #25D366;
            color: white;
            text-decoration: none;
            border-radius: 25px;
            margin: 10px;
            transition: background 0.3s;
          }
          .btn:hover {
            background: #128C7E;
          }
        </style>
      </head>
      <body>
        <div class="container">
          <h1>ü§ñ Hypnottica - Asistente Virtual</h1>
          <div class="status">
            <h2>‚úÖ Servidor funcionando correctamente</h2>
            <p><strong>Nombre:</strong> Luna</p>
            <p><strong>Estado:</strong> Online</p>
            <p><strong>Modo:</strong> Aut√≥nomo - Datos integrados</p>
          </div>
          <p>
            <a href="/health" class="btn">Health Check</a>
            <a href="/probador" class="btn">Probador del Bot</a>
          </p>
          <p>‚ú® Asistente virtual completo listo para usar</p>
        </div>
      </body>
    </html>
  `);
});

// ==================== PROBADOR WEB INTERACTIVO ====================
app.get('/probador', (req, res) => {
  res.send(`
    <!DOCTYPE html>
    <html>
    <head>
        <title>Probador Bot - Hypnottica</title>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <style>
            * { margin: 0; padding: 0; box-sizing: border-box; }
            body { 
                font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif; 
                background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); 
                min-height: 100vh; 
                padding: 20px; 
            }
            .container { 
                max-width: 800px; 
                margin: 0 auto; 
                background: white; 
                border-radius: 20px; 
                box-shadow: 0 20px 40px rgba(0,0,0,0.1); 
                overflow: hidden; 
            }
            .header { 
                background: linear-gradient(135deg, #25D366, #128C7E); 
                color: white; 
                padding: 30px; 
                text-align: center; 
            }
            .header h1 { font-size: 2.5em; margin-bottom: 10px; }
            .header p { opacity: 0.9; font-size: 1.1em; }
            .chat-container { 
                padding: 20px; 
                height: 500px; 
                overflow-y: auto; 
                border-bottom: 1px solid #eee; 
            }
            .message { 
                margin: 15px 0; 
                padding: 15px 20px; 
                border-radius: 20px; 
                max-width: 80%; 
                animation: fadeIn 0.3s ease-in; 
            }
            .user-message { 
                background: #25D366; 
                color: white; 
                margin-left: auto; 
                border-bottom-right-radius: 5px; 
            }
            .bot-message { 
                background: #f0f0f0; 
                color: #333; 
                margin-right: auto; 
                border-bottom-left-radius: 5px; 
                white-space: pre-line; 
            }
            .input-container { 
                padding: 20px; 
                display: flex; 
                gap: 10px; 
                background: #f8f9fa; 
            }
            .input-container input { 
                flex: 1; 
                padding: 15px 20px; 
                border: 2px solid #ddd; 
                border-radius: 25px; 
                font-size: 16px; 
                outline: none; 
                transition: border-color 0.3s; 
            }
            .input-container input:focus { border-color: #25D366; }
            .input-container button { 
                padding: 15px 25px; 
                background: #25D366; 
                color: white; 
                border: none; 
                border-radius: 25px; 
                cursor: pointer; 
                font-size: 16px; 
                font-weight: bold; 
                transition: background 0.3s; 
            }
            .input-container button:hover { background: #128C7E; }
            .quick-buttons { 
                padding: 15px 20px; 
                background: #f8f9fa; 
                border-top: 1px solid #eee; 
                display: flex; 
                flex-wrap: wrap; 
                gap: 10px; 
            }
            .quick-button { 
                padding: 10px 15px; 
                background: white; 
                border: 2px solid #25D366; 
                border-radius: 20px; 
                color: #25D366; 
                cursor: pointer; 
                font-size: 14px; 
                transition: all 0.3s; 
            }
            .quick-button:hover { 
                background: #25D366; 
                color: white; 
            }
            .status { 
                padding: 10px 20px; 
                background: #fff3cd; 
                border-left: 4px solid #ffc107; 
                margin: 10px 20px; 
                border-radius: 5px; 
                font-size: 14px; 
            }
            @keyframes fadeIn { 
                from { opacity: 0; transform: translateY(10px); } 
                to { opacity: 1; transform: translateY(0); } 
            }
            .typing-indicator { 
                display: inline-block; 
                padding: 10px 15px; 
                background: #f0f0f0; 
                border-radius: 15px; 
                color: #666; 
                font-style: italic; 
            }
        </style>
    </head>
    <body>
        <div class="container">
            <div class="header">
                <h1>ü§ñ Luna - Probador</h1>
                <p>Asistente Virtual de Hypnottica</p>
            </div>
            
            <div class="status">
                üí° <strong>Tip:</strong> Prob√° consultas como "hola", "obras sociales", "precios", "lentes de contacto", etc.
            </div>
            
            <div class="chat-container" id="chatContainer">
                <div class="message bot-message">
                    üëã ¬°Hola! Soy *Luna*, tu asistente de *Hypnottica*. ¬øEn qu√© puedo ayudarte hoy?\n\n‚Ä¢ üì¶ Consultar stock\n‚Ä¢ üí≤ Precios y promociones\n‚Ä¢ üè• Obras sociales\n‚Ä¢ üëÅÔ∏è Lentes de contacto\n‚Ä¢ üìç Ubicaci√≥n y horarios\n‚Ä¢ üîß Servicios t√©cnicos
                </div>
            </div>
            
            <div class="quick-buttons" id="quickButtons">
                <div class="quick-button" onclick="sendQuickMessage('hola')">üëã Hola</div>
                <div class="quick-button" onclick="sendQuickMessage('que obras sociales aceptan')">üè• Obras sociales</div>
                <div class="quick-button" onclick="sendQuickMessage('precios')">üí≤ Precios</div>
                <div class="quick-button" onclick="sendQuickMessage('marcas')">üëì Marcas</div>
                <div class="quick-button" onclick="sendQuickMessage('horarios')">‚è∞ Horarios</div>
                <div class="quick-button" onclick="sendQuickMessage('direccion')">üìç Direcci√≥n</div>
                <div class="quick-button" onclick="sendQuickMessage('lentes de contacto')">üëÅÔ∏è Lentes contacto</div>
                <div class="quick-button" onclick="sendQuickMessage('l√≠quidos')">üß¥ L√≠quidos</div>
            </div>
            
            <div class="input-container">
                <input type="text" id="messageInput" placeholder="Escribe tu mensaje..." onkeypress="handleKeyPress(event)">
                <button onclick="sendMessage()">Enviar</button>
            </div>
        </div>

        <script>
            function addMessage(message, isUser = false) {
                const chatContainer = document.getElementById('chatContainer');
                const messageDiv = document.createElement('div');
                messageDiv.className = isUser ? 'message user-message' : 'message bot-message';
                messageDiv.innerHTML = message.replace(/\\n/g, '<br>');
                chatContainer.appendChild(messageDiv);
                chatContainer.scrollTop = chatContainer.scrollHeight;
            }
            
            function showTyping() {
                const chatContainer = document.getElementById('chatContainer');
                const typingDiv = document.createElement('div');
                typingDiv.className = 'message bot-message';
                typingDiv.id = 'typingIndicator';
                typingDiv.innerHTML = '<span class="typing-indicator">Luna est√° escribiendo...</span>';
                chatContainer.appendChild(typingDiv);
                chatContainer.scrollTop = chatContainer.scrollHeight;
            }
            
            function hideTyping() {
                const typingIndicator = document.getElementById('typingIndicator');
                if (typingIndicator) {
                    typingIndicator.remove();
                }
            }
            
            async function sendMessage() {
                const input = document.getElementById('messageInput');
                const message = input.value.trim();
                
                if (!message) return;
                
                addMessage(message, true);
                input.value = '';
                
                showTyping();
                
                try {
                    const response = await fetch('/probar-bot', {
                        method: 'POST',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify({ mensaje: message })
                    });
                    
                    const data = await response.json();
                    hideTyping();
                    
                    if (data.respuesta) {
                        addMessage(data.respuesta);
                    } else {
                        addMessage('‚ùå No se recibi√≥ respuesta');
                    }
                    
                } catch (error) {
                    hideTyping();
                    addMessage('‚ùå Error de conexi√≥n');
                    console.error('Error:', error);
                }
            }
            
            function sendQuickMessage(message) {
                document.getElementById('messageInput').value = message;
                sendMessage();
            }
            
            function handleKeyPress(event) {
                if (event.key === 'Enter') {
                    sendMessage();
                }
            }
        </script>
    </body>
    </html>
  `);
});

// Ruta POST para el probador
app.post('/probar-bot', async (req, res) => {
  try {
    const { mensaje } = req.body;
    
    if (!mensaje) {
      return res.status(400).json({ error: 'Falta el mensaje' });
    }
    
    console.log(`üß™ Probador - Mensaje: "${mensaje}"`);
    
    const senderId = 'web-user-' + Date.now();
    let contexto = memoryService.obtenerContextoUsuario(senderId);
    
    const respuesta = await responseHandler.generarRespuesta(mensaje, contexto);
    
    memoryService.guardarContextoUsuario(senderId, contexto);
    
    res.json({
      mensaje_original: mensaje,
      respuesta: respuesta,
      timestamp: new Date().toISOString()
    });
    
  } catch (error) {
    console.error('‚ùå Error en probador:', error);
    res.status(500).json({ 
      error: 'Error interno',
      respuesta: "‚ùå Error del servidor. Por favor, recarg√° la p√°gina."
    });
  }
});

// ==================== WEBHOOK PARA WHATSAPP (PARA EL FUTURO) ====================
app.post('/webhook', async (req, res) => {
  try {
    // Por ahora solo aceptamos mensajes pero no respondemos autom√°ticamente
    // (esto se activar√° cuando conectemos WhatsApp Business API)
    console.log('üì© Webhook recibido (WhatsApp futuro)');
    res.status(200).send('EVENT_RECEIVED');
  } catch (error) {
    console.error('‚ùå Error en webhook:', error);
    res.status(200).send('OK');
  }
});

app.get('/webhook', (req, res) => {
  const mode = req.query['hub.mode'];
  const token = req.query['hub.verify_token'];
  const challenge = req.query['hub.challenge'];
  
  if (mode === 'subscribe' && token === 'hypnottica_token') {
    console.log('‚úÖ Webhook verificado');
    res.status(200).send(challenge);
  } else {
    console.log('‚ùå Error en verificaci√≥n de webhook');
    res.sendStatus(403);
  }
});

// ==================== INICIAR SERVIDOR ====================
const PORT = process.env.PORT || 3000;
app.listen(PORT, () => {
  console.log(`ü§ñ Luna funcionando en puerto ${PORT}`);
  console.log(`üåê Probador disponible en: http://localhost:${PORT}/probador`);
  console.log(`‚ù§Ô∏è  Health check en: http://localhost:${PORT}/health`);
});

module.exports = app;
